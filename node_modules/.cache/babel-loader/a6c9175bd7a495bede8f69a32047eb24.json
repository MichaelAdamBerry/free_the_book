{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/volume/Volume.js\";\nimport React from \"react\";\nimport queryString from \"query-string\";\nimport { getVolume } from \"../../utils/api/google\";\nimport { Spring } from \"react-spring\";\nimport Card from \"../card/Card\";\nimport VolumeCardView from \"./VolumeCardView\";\n\nvar RenderVolume = function RenderVolume(_ref) {\n  var volume = _ref.volume;\n  return React.createElement(Spring, {\n    from: {\n      opacity: 0\n    },\n    to: {\n      opacity: 1\n    },\n    delay: 300,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, function (_ref2) {\n    var opacity = _ref2.opacity;\n    return React.createElement(\"div\", {\n      style: {\n        opacity: opacity\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(Card, {\n      volume: volume,\n      volumeInfo: volume.volumeInfo,\n      render: function render(_ref3) {\n        var props = _ref3.props;\n        return React.createElement(VolumeCardView, Object.assign({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }));\n  });\n};\n\nvar Volume =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Volume, _React$Component);\n\n  function Volume() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Volume);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Volume)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(Volume, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var urlStr, volume;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                urlStr = queryString.parse(this.props.location.search);\n                _context.next = 3;\n                return getVolume(urlStr.id);\n\n              case 3:\n                volume = _context.sent;\n                this.setState({\n                  volume: volume\n                }, function () {\n                  _this2.setState({\n                    loading: false\n                  });\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loading = _this$state.loading,\n          volume = _this$state.volume;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, !loading && React.createElement(RenderVolume, {\n        volume: volume,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Volume;\n}(React.Component);\n\nexport { Volume as default };","map":{"version":3,"sources":["/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/volume/Volume.js"],"names":["React","queryString","getVolume","Spring","Card","VolumeCardView","RenderVolume","volume","opacity","volumeInfo","props","Volume","state","loading","urlStr","parse","location","search","id","setState","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AACnC,SACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAd;AAA8B,IAAA,EAAE,EAAE;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAAlC;AAAkD,IAAA,KAAK,EAAE,GAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA,QAAGA,OAAH,SAAGA,OAAH;AAAA,WACC;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,OAAO,EAAPA;AAAF,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,MAAM,EAAED,MADV;AAEE,MAAA,UAAU,EAAEA,MAAM,CAACE,UAFrB;AAGE,MAAA,MAAM,EAAE,uBAAe;AAAA,YAAZC,KAAY,SAAZA,KAAY;AACrB,eAAO,oBAAC,cAAD,oBAAoBA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,OALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD;AAAA,GADH,CADF;AAeD,CAhBD;;IAkBqBC,M;;;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AAAEC,MAAAA,OAAO,EAAE;AAAX,K;;;;;;;;;;;;;;;;;AAEAC,gBAAAA,M,GAASb,WAAW,CAACc,KAAZ,CAAkB,KAAKL,KAAL,CAAWM,QAAX,CAAoBC,MAAtC,C;;uBACMf,SAAS,CAACY,MAAM,CAACI,EAAR,C;;;AAAxBX,gBAAAA,M;AACN,qBAAKY,QAAL,CAAc;AAAEZ,kBAAAA,MAAM,EAANA;AAAF,iBAAd,EAA0B,YAAM;AAC9B,kBAAA,MAAI,CAACY,QAAL,CAAc;AAAEN,oBAAAA,OAAO,EAAE;AAAX,mBAAd;AACD,iBAFD;;;;;;;;;;;;;;;;;;6BAIO;AAAA,wBACqB,KAAKD,KAD1B;AAAA,UACCC,OADD,eACCA,OADD;AAAA,UACUN,MADV,eACUA,MADV;AAEP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,CAACM,OAAD,IAAY,oBAAC,YAAD;AAAc,QAAA,MAAM,EAAEN,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAlB,CAAP;AACD;;;;EAZiCP,KAAK,CAACoB,S;;SAArBT,M","sourcesContent":["import React from \"react\";\nimport queryString from \"query-string\";\nimport { getVolume } from \"../../utils/api/google\";\nimport { Spring } from \"react-spring\";\nimport Card from \"../card/Card\";\nimport VolumeCardView from \"./VolumeCardView\";\n\nconst RenderVolume = ({ volume }) => {\n  return (\n    <Spring from={{ opacity: 0 }} to={{ opacity: 1 }} delay={300}>\n      {({ opacity }) => (\n        <div style={{ opacity }}>\n          <Card\n            volume={volume}\n            volumeInfo={volume.volumeInfo}\n            render={({ props }) => {\n              return <VolumeCardView {...props} />;\n            }}\n          />\n        </div>\n      )}\n    </Spring>\n  );\n};\n\nexport default class Volume extends React.Component {\n  state = { loading: true };\n  async componentDidMount() {\n    const urlStr = queryString.parse(this.props.location.search);\n    const volume = await getVolume(urlStr.id);\n    this.setState({ volume }, () => {\n      this.setState({ loading: false });\n    });\n  }\n  render() {\n    const { loading, volume } = this.state;\n    return <div>{!loading && <RenderVolume volume={volume} />}</div>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}