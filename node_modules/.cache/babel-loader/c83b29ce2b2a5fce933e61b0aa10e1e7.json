{"ast":null,"code":"var _jsxFileName = \"/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/volume/VolumeCardView.js\";\nimport React from \"react\";\nimport moment from \"moment\";\nimport CoverImg from \"../CoverImg\";\nimport PropTypes from \"prop-types\";\nimport Stars from \"../card/Stars\";\n\nvar Catagories = function Catagories(_ref) {\n  var categories = _ref.categories;\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, categories.map(function (e) {\n    return React.createElement(\"span\", {\n      key: Math.random() * 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, e, \" \");\n  }));\n};\n\nCatagories.propTypes = {\n  catagories: PropTypes.array\n};\n\nvar VolumeCardView = function VolumeCardView(props) {\n  var title = props.title,\n      author = props.author,\n      publishedDate = props.publishedDate,\n      imageLinks = props.imageLinks,\n      averageRating = props.averageRating,\n      description = props.description,\n      pageCount = props.pageCount,\n      previewLink = props.previewLink,\n      categories = props.categories;\n  return React.createElement(\"div\", {\n    className: \"volumeContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"volumeCardContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"miniHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"titleInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, moment(publishedDate).format(\"Y\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, averageRating && React.createElement(Stars, {\n    averageRating: averageRating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"volumeAuthor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, author)), React.createElement(\"div\", {\n    className: \"titleMeta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, pageCount, \" pages\"), categories && React.createElement(Catagories, {\n    categories: categories,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"imgWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(CoverImg, {\n    imageLinks: imageLinks,\n    maxRes: true,\n    width: \"350px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"imgWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    dangerouslySetInnerHTML: {\n      __html: \"\".concat(description)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"a\", {\n    href: previewLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Read Preview at Google Books\")))));\n};\n\nexport default VolumeCardView;","map":{"version":3,"sources":["/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/volume/VolumeCardView.js"],"names":["React","moment","CoverImg","PropTypes","Stars","Catagories","categories","map","e","Math","random","propTypes","catagories","array","VolumeCardView","props","title","author","publishedDate","imageLinks","averageRating","description","pageCount","previewLink","format","__html"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\nimport CoverImg from \"../CoverImg\";\nimport PropTypes from \"prop-types\";\nimport Stars from \"../card/Stars\";\n\nconst Catagories = ({ categories }) => {\n  return (\n    <p>\n      {categories.map(e => (\n        <span key={Math.random() * 20}>{e} </span>\n      ))}\n    </p>\n  );\n};\n\nCatagories.propTypes = {\n  catagories: PropTypes.array\n};\n\nconst VolumeCardView = props => {\n  const {\n    title,\n    author,\n    publishedDate,\n    imageLinks,\n    averageRating,\n    description,\n    pageCount,\n    previewLink,\n    categories\n  } = props;\n  return (\n    <div className=\"volumeContainer\">\n      <div className=\"volumeCardContainer\">\n        <div>\n          <div className=\"miniHeader\">\n            <div className=\"titleInfo\">\n              <h5>{title}</h5>\n              <p>{moment(publishedDate).format(\"Y\")}</p>\n              <div>\n                {averageRating && <Stars averageRating={averageRating} />}\n              </div>\n            </div>\n\n            <div className=\"volumeAuthor\">\n              <h4>{author}</h4>\n            </div>\n            <div className=\"titleMeta\">\n              <p>{pageCount} pages</p>\n              {categories && <Catagories categories={categories} />}\n            </div>\n\n            <div className=\"imgWrapper\">\n              <CoverImg imageLinks={imageLinks} maxRes={true} width={\"350px\"} />\n            </div>\n          </div>\n          <div className=\"imgWrapper\">\n            <div className=\"description\">\n              <p dangerouslySetInnerHTML={{ __html: `${description}` }} />\n            </div>\n            <div />\n            <a href={previewLink}>Read Preview at Google Books</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default VolumeCardView;\n"]},"metadata":{},"sourceType":"module"}