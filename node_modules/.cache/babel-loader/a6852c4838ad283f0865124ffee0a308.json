{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/List.js\";\nimport React from \"react\";\nimport { getVolumeList } from \"../api/google\";\nimport queryString from \"query-string\";\nimport Card from \"./Card\";\nimport { Spring } from \"react-spring\";\n\nfunction ListItem(_ref) {\n  var volume = _ref.volume;\n  return React.createElement(Spring, {\n    from: {\n      opacity: 0\n    },\n    to: {\n      opacity: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, function (_ref2) {\n    var opacity = _ref2.opacity;\n    return React.createElement(\"div\", {\n      style: {\n        opacity: opacity\n      },\n      className: \"cardContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      key: volume.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(Card, {\n      volume: volume,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    })));\n  });\n}\n\nfunction ListView(_ref3) {\n  var volumes = _ref3.volumes;\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, volumes.map(function (volume, index) {\n    return React.createElement(ListItem, {\n      volume: volume,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  }));\n}\n\nvar List =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(List, _React$Component);\n\n  function List(props) {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this, props));\n    _this.state = {\n      loading: true,\n      volumes: null,\n      error: null,\n      query: null\n    };\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var query, volumes;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                query = queryString.parse(this.props.location.search);\n                _context.next = 3;\n                return getVolumeList(query.q);\n\n              case 3:\n                volumes = _context.sent;\n                this.setState({\n                  volumes: volumes,\n                  query: query.q\n                }, function () {\n                  _this2.setState({\n                    loading: false\n                  });\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loading = _this$state.loading,\n          volumes = _this$state.volumes,\n          query = _this$state.query;\n      return React.createElement(\"div\", {\n        className: \"listContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Search results for \", query, \":\"), !loading && React.createElement(ListView, {\n        volumes: volumes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return List;\n}(React.Component);\n\nexport { List as default };","map":{"version":3,"sources":["/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/List.js"],"names":["React","getVolumeList","queryString","Card","Spring","ListItem","volume","opacity","id","ListView","volumes","map","index","List","props","state","loading","error","query","parse","location","search","q","setState","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,MAAT,QAAuB,cAAvB;;AAEA,SAASC,QAAT,OAA8B;AAAA,MAAVC,MAAU,QAAVA,MAAU;AAC5B,SACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAd;AAA8B,IAAA,EAAE,EAAE;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA,QAAGA,OAAH,SAAGA,OAAH;AAAA,WACC;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,OAAO,EAAPA;AAAF,OAAZ;AAAyB,MAAA,SAAS,EAAC,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,GAAG,EAAED,MAAM,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,MAAM,EAAEF,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADD;AAAA,GADH,CADF;AAWD;;AAED,SAASG,QAAT,QAA+B;AAAA,MAAXC,OAAW,SAAXA,OAAW;AAC7B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,CAACC,GAAR,CAAY,UAACL,MAAD,EAASM,KAAT,EAAmB;AAC9B,WAAO,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEN,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CADH,CADF;AAOD;;IACoBO,I;;;;;AACnB,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBN,MAAAA,OAAO,EAAE,IAA1B;AAAgCO,MAAAA,KAAK,EAAE,IAAvC;AAA6CC,MAAAA,KAAK,EAAE;AAApD,KAAb;AAFiB;AAGlB;;;;;;;;;;;;;;;AAGOA,gBAAAA,K,GAAQhB,WAAW,CAACiB,KAAZ,CAAkB,KAAKL,KAAL,CAAWM,QAAX,CAAoBC,MAAtC,C;;uBACQpB,aAAa,CAACiB,KAAK,CAACI,CAAP,C;;;AAA7BZ,gBAAAA,O;AACN,qBAAKa,QAAL,CAAc;AAAEb,kBAAAA,OAAO,EAAEA,OAAX;AAAoBQ,kBAAAA,KAAK,EAAEA,KAAK,CAACI;AAAjC,iBAAd,EAAoD,YAAM;AACxD,kBAAA,MAAI,CAACC,QAAL,CAAc;AAAEP,oBAAAA,OAAO,EAAE;AAAX,mBAAd;AACD,iBAFD;;;;;;;;;;;;;;;;;;6BAIO;AAAA,wBAC6B,KAAKD,KADlC;AAAA,UACCC,OADD,eACCA,OADD;AAAA,UACUN,OADV,eACUA,OADV;AAAA,UACmBQ,KADnB,eACmBA,KADnB;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAwBA,KAAxB,MADF,EAEG,CAACF,OAAD,IAAY,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAEN,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFf,CADF;AAMD;;;;EArB+BV,KAAK,CAACwB,S;;SAAnBX,I","sourcesContent":["import React from \"react\";\nimport { getVolumeList } from \"../api/google\";\nimport queryString from \"query-string\";\nimport Card from \"./Card\";\nimport { Spring } from \"react-spring\";\n\nfunction ListItem({ volume }) {\n  return (\n    <Spring from={{ opacity: 0 }} to={{ opacity: 1 }}>\n      {({ opacity }) => (\n        <div style={{ opacity }} className=\"cardContainer\">\n          <li key={volume.id}>\n            <Card volume={volume} />\n          </li>\n        </div>\n      )}\n    </Spring>\n  );\n}\n\nfunction ListView({ volumes }) {\n  return (\n    <ul>\n      {volumes.map((volume, index) => {\n        return <ListItem volume={volume} />;\n      })}\n    </ul>\n  );\n}\nexport default class List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { loading: true, volumes: null, error: null, query: null };\n  }\n\n  async componentDidMount() {\n    const query = queryString.parse(this.props.location.search);\n    const volumes = await getVolumeList(query.q);\n    this.setState({ volumes: volumes, query: query.q }, () => {\n      this.setState({ loading: false });\n    });\n  }\n  render() {\n    const { loading, volumes, query } = this.state;\n    return (\n      <div className=\"listContainer\">\n        <h3>Search results for {query}:</h3>\n        {!loading && <ListView volumes={volumes} />}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}