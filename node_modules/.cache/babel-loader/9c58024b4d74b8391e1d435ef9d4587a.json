{"ast":null,"code":"var _jsxFileName = \"/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/list/ListCardView.js\";\nimport React from \"react\";\nimport CoverImg from \"../CoverImg\";\nimport Stars from \"../card/Stars\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nexport function CardHeader(_ref) {\n  var title = _ref.title,\n      author = _ref.author;\n  return React.createElement(React.Fragment, null, \" \", React.createElement(\"h4\", {\n    \"data-testid\": \"bookTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, title), React.createElement(\"h5\", {\n    \"data-testid\": \"bookAuthor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, author));\n}\n\nvar ListCardView = function ListCardView(props) {\n  return React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: {\n      pathname: \"/volume\",\n      search: \"id=\".concat(props.id)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    title: props.title,\n    author: props.author,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"thumbnailContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(CoverImg, {\n    imageLinks: props.imageLinks,\n    maxRes: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"stars\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, !props.averageRating === false && React.createElement(Stars, {\n    averageRating: props.averageRating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })))));\n};\n\nListCardView.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  author: PropTypes.string,\n  averageRating: PropTypes.number\n};\nexport default ListCardView;","map":{"version":3,"sources":["/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/list/ListCardView.js"],"names":["React","CoverImg","Stars","Link","PropTypes","CardHeader","title","author","ListCardView","props","pathname","search","id","imageLinks","averageRating","propTypes","string","isRequired","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,SAASC,UAAT,OAAuC;AAAA,MAAjBC,KAAiB,QAAjBA,KAAiB;AAAA,MAAVC,MAAU,QAAVA,MAAU;AAC5C,SACE,0CACG,GADH,EAEE;AAAI,mBAAY,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BD,KAA7B,CAFF,EAGE;AAAI,mBAAY,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BC,MAA9B,CAHF,CADF;AAOD;;AAED,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAC5B,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAAEC,MAAAA,QAAQ,EAAE,SAAZ;AAAuBC,MAAAA,MAAM,eAAQF,KAAK,CAACG,EAAd;AAA7B,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEH,KAAK,CAACH,KAAzB;AAAgC,IAAA,MAAM,EAAEG,KAAK,CAACF,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,UAAU,EAAEE,KAAK,CAACI,UAA5B;AAAwC,IAAA,MAAM,EAAE,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAKE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACJ,KAAK,CAACK,aAAP,KAAyB,KAAzB,IACC,oBAAC,KAAD;AAAO,IAAA,aAAa,EAAEL,KAAK,CAACK,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CALF,CADF,CADF,CADF;AAiBD,CAlBD;;AAoBAN,YAAY,CAACO,SAAb,GAAyB;AACvBH,EAAAA,EAAE,EAAER,SAAS,CAACY,MAAV,CAAiBC,UADE;AAEvBX,EAAAA,KAAK,EAAEF,SAAS,CAACY,MAFM;AAGvBT,EAAAA,MAAM,EAAEH,SAAS,CAACY,MAHK;AAIvBF,EAAAA,aAAa,EAAEV,SAAS,CAACc;AAJF,CAAzB;AAOA,eAAeV,YAAf","sourcesContent":["import React from \"react\";\nimport CoverImg from \"../CoverImg\";\nimport Stars from \"../card/Stars\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nexport function CardHeader({ title, author }) {\n  return (\n    <>\n      {\" \"}\n      <h4 data-testid=\"bookTitle\">{title}</h4>\n      <h5 data-testid=\"bookAuthor\">{author}</h5>\n    </>\n  );\n}\n\nconst ListCardView = props => {\n  return (\n    <div className=\"card\">\n      <Link to={{ pathname: \"/volume\", search: `id=${props.id}` }}>\n        <div>\n          <CardHeader title={props.title} author={props.author} />\n          <div className=\"thumbnailContainer\">\n            <CoverImg imageLinks={props.imageLinks} maxRes={false} />\n          </div>\n          <div className=\"stars\">\n            {!props.averageRating === false && (\n              <Stars averageRating={props.averageRating} />\n            )}\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nListCardView.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  author: PropTypes.string,\n  averageRating: PropTypes.number\n};\n\nexport default ListCardView;\n"]},"metadata":{},"sourceType":"module"}