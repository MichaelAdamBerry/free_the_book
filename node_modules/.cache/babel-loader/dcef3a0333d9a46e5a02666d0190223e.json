{"ast":null,"code":"import _objectSpread from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/list/ListCardView.js\";\nimport React from \"react\";\nimport CoverImg from \"../CoverImg\";\nimport Stars from \"../card/Stars\";\nimport { Spring } from \"react-spring\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nvar CardSpring =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CardSpring, _React$Component);\n\n  function CardSpring() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CardSpring);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CardSpring)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      hovered: false\n    };\n\n    _this.setHover = function () {\n      _this.setState({\n        hovered: true\n      });\n    };\n\n    _this.cancelHover = function () {\n      _this.setState({\n        hovered: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CardSpring, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var cardProps = _objectSpread({}, this.props);\n\n      return React.createElement(Spring, {\n        to: {\n          transform: \"scale(\".concat(this.state.hovered ? 1.1 : 1, \")\"),\n          opacity: this.state.hovered ? \"1\" : \".9\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, function (_ref) {\n        var props = _ref.props;\n        return React.createElement(\"div\", {\n          onMouseOver: _this2.setHover,\n          onMouseOut: _this2.cancelHover,\n          style: {\n            props: props\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(ListCardView, Object.assign({}, cardProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        })));\n      });\n    }\n  }]);\n\n  return CardSpring;\n}(React.Component);\n\nvar ListCardView = function ListCardView(props) {\n  return React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: {\n      pathname: \"/volume\",\n      search: \"id=\".concat(props.id)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"listCardWidth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, props.title), React.createElement(\"div\", {\n    className: \"thumbnailContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(CoverImg, {\n    imageLinks: props.imageLinks,\n    maxRes: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"listCardWidth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    \"data-testid\": \"bookAuthor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, props.author)), React.createElement(\"div\", {\n    className: \"stars\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, !props.averageRating === false && React.createElement(Stars, {\n    averageRating: props.averageRating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })))));\n};\n\nListCardView.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  author: PropTypes.string,\n  averageRating: PropTypes.number\n};\nexport default CardSpring;","map":{"version":3,"sources":["/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/list/ListCardView.js"],"names":["React","CoverImg","Stars","Spring","Link","PropTypes","CardSpring","state","hovered","setHover","setState","cancelHover","cardProps","props","transform","opacity","Component","ListCardView","pathname","search","id","title","imageLinks","author","averageRating","propTypes","string","isRequired","number"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport CoverImg from \"../CoverImg\";\nimport Stars from \"../card/Stars\";\nimport { Spring } from \"react-spring\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nclass CardSpring extends React.Component {\n  state = { hovered: false };\n  setHover = () => {\n    this.setState({ hovered: true });\n  };\n  cancelHover = () => {\n    this.setState({ hovered: false });\n  };\n  render() {\n    const cardProps = {\n      ...this.props\n    };\n    return (\n      <Spring\n        to={{\n          transform: `scale(${this.state.hovered ? 1.1 : 1})`,\n          opacity: this.state.hovered ? \"1\" : \".9\"\n        }}>\n        {({ props }) => (\n          <div\n            onMouseOver={this.setHover}\n            onMouseOut={this.cancelHover}\n            style={{ props }}>\n            <ListCardView {...cardProps} />\n          </div>\n        )}\n      </Spring>\n    );\n  }\n}\n\nconst ListCardView = props => {\n  return (\n    <div className=\"card\">\n      <Link to={{ pathname: \"/volume\", search: `id=${props.id}` }}>\n        <div className=\"listCardWidth\">\n          <h4>{props.title}</h4>\n          <div className=\"thumbnailContainer\">\n            <CoverImg imageLinks={props.imageLinks} maxRes={false} />\n          </div>\n          <div className=\"listCardWidth\">\n            <h5 data-testid=\"bookAuthor\">{props.author}</h5>\n          </div>\n          <div className=\"stars\">\n            {!props.averageRating === false && (\n              <Stars averageRating={props.averageRating} />\n            )}\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nListCardView.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  author: PropTypes.string,\n  averageRating: PropTypes.number\n};\n\nexport default CardSpring;\n"]},"metadata":{},"sourceType":"module"}