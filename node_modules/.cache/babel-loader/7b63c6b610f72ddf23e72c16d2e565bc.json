{"ast":null,"code":"import _classCallCheck from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/volume/VolumeCardView.js\";\nimport React from \"react\";\nimport moment from \"moment\";\nimport CoverImg from \"../CoverImg\";\nimport PropTypes from \"prop-types\";\nimport Stars from \"../card/Stars\";\nimport { Spring, config as _config, animated as a } from \"react-spring\";\n\nvar CardFlipper =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CardFlipper, _React$Component);\n\n  function CardFlipper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CardFlipper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CardFlipper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      flipped: false\n    };\n\n    _this.handleClick = function () {\n      _this.setState(function (prevState) {\n        return {\n          flipped: !prevState.flipped\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CardFlipper, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          description = _this$props.description,\n          previewLink = _this$props.previewLink,\n          imageLinks = _this$props.imageLinks;\n      var flipped = this.state.flipped;\n      return React.createElement(\"div\", {\n        onClick: this.handleClick,\n        className: \"imgWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(Spring, {\n        config: function config(key) {\n          return key === \"opacity\" ? _config.molasses : _config.slow;\n        },\n        to: {\n          opacity: \"\".concat(flipped ? \"1\" : \"0\"),\n          transform: \"perspective(600px) rotateY(\".concat(flipped ? \"180\" : \"0\", \"deg)\"),\n          backgroundColor: \"\".concat(flipped ? \"#2f2f2f\" : \"#f7fbfc\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, function (_ref) {\n        var opacity = _ref.opacity,\n            transform = _ref.transform;\n        return React.createElement(React.Fragment, null, React.createElement(a.div, {\n          className: \"c front\",\n          style: {\n            opacity: \"\".concat(flipped ? \"0\" : \"1\"),\n            transform: transform\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(Front, {\n          imageLinks: imageLinks,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        })), React.createElement(a.div, {\n          className: \"c back\",\n          style: {\n            opacity: opacity,\n            transform: transform\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(Back, {\n          description: description,\n          previewLink: previewLink,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        })), React.createElement(a.div, {\n          className: \"c\",\n          style: {\n            opacity: opacity\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, description)));\n      }));\n    }\n  }]);\n\n  return CardFlipper;\n}(React.Component);\n\nvar Catagories = function Catagories(_ref2) {\n  var categories = _ref2.categories;\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, categories.map(function (e) {\n    return React.createElement(\"span\", {\n      key: Math.random() * 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, e, \" \");\n  }));\n};\n\nCatagories.propTypes = {\n  catagories: PropTypes.array\n};\n\nvar Front = function Front(_ref3) {\n  var imageLinks = _ref3.imageLinks;\n  return React.createElement(CoverImg, {\n    imageLinks: imageLinks,\n    maxRes: true,\n    width: \"350px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  });\n};\n\nvar Back = function Back(_ref4) {\n  var description = _ref4.description,\n      previewLink = _ref4.previewLink;\n  return React.createElement(\"div\", {\n    className: \"back\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  });\n};\n\nfunction VolumeCardView(props) {\n  var title = props.title,\n      author = props.author,\n      publishedDate = props.publishedDate,\n      imageLinks = props.imageLinks,\n      averageRating = props.averageRating,\n      description = props.description,\n      pageCount = props.pageCount,\n      previewLink = props.previewLink,\n      categories = props.categories;\n  return React.createElement(\"div\", {\n    className: \"volumeContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"miniHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"titleInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, moment(publishedDate).format(\"Y\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, averageRating && React.createElement(Stars, {\n    averageRating: averageRating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"volumeAuthor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, author)), React.createElement(\"div\", {\n    className: \"titleMeta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, pageCount, \" pages\"), categories && React.createElement(Catagories, {\n    categories: categories,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(CardFlipper, {\n    imageLinks: imageLinks,\n    description: description,\n    previewLink: previewLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })))));\n}\n\nexport default VolumeCardView;","map":{"version":3,"sources":["/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/volume/VolumeCardView.js"],"names":["React","moment","CoverImg","PropTypes","Stars","Spring","config","animated","a","CardFlipper","state","flipped","handleClick","setState","prevState","props","description","previewLink","imageLinks","key","molasses","slow","opacity","transform","backgroundColor","Component","Catagories","categories","map","e","Math","random","propTypes","catagories","array","Front","Back","VolumeCardView","title","author","publishedDate","averageRating","pageCount","format"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\nimport CoverImg from \"../CoverImg\";\nimport PropTypes from \"prop-types\";\nimport Stars from \"../card/Stars\";\nimport { Spring, config, animated as a } from \"react-spring\";\n\nclass CardFlipper extends React.Component {\n  state = { flipped: false };\n\n  handleClick = () => {\n    this.setState(prevState => ({ flipped: !prevState.flipped }));\n  };\n\n  render() {\n    const { description, previewLink, imageLinks } = this.props;\n    const { flipped } = this.state;\n    return (\n      <div onClick={this.handleClick} className=\"imgWrapper\">\n        <Spring\n          config={key => (key === \"opacity\" ? config.molasses : config.slow)}\n          to={{\n            opacity: `${flipped ? \"1\" : \"0\"}`,\n            transform: `perspective(600px) rotateY(${\n              flipped ? \"180\" : \"0\"\n            }deg)`,\n            backgroundColor: `${flipped ? \"#2f2f2f\" : \"#f7fbfc\"}`\n          }}>\n          {({ opacity, transform }) => (\n            <>\n              <a.div\n                className=\"c front\"\n                style={{\n                  opacity: `${flipped ? \"0\" : \"1\"}`,\n                  transform\n                }}>\n                <Front imageLinks={imageLinks} />\n              </a.div>\n              <a.div\n                className=\"c back\"\n                style={{\n                  opacity,\n                  transform\n                }}>\n                <Back description={description} previewLink={previewLink} />\n              </a.div>\n              <a.div className=\"c\" style={{ opacity }}>\n                <p>{description}</p>\n              </a.div>\n            </>\n          )}\n        </Spring>\n      </div>\n    );\n  }\n}\n\nconst Catagories = ({ categories }) => {\n  return (\n    <p>\n      {categories.map(e => (\n        <span key={Math.random() * 20}>{e} </span>\n      ))}\n    </p>\n  );\n};\n\nCatagories.propTypes = {\n  catagories: PropTypes.array\n};\n\nconst Front = ({ imageLinks }) => {\n  return <CoverImg imageLinks={imageLinks} maxRes={true} width={\"350px\"} />;\n};\n\nconst Back = ({ description, previewLink }) => {\n  return <div className=\"back\" />;\n};\n\nfunction VolumeCardView(props) {\n  const {\n    title,\n    author,\n    publishedDate,\n    imageLinks,\n    averageRating,\n    description,\n    pageCount,\n    previewLink,\n    categories\n  } = props;\n  return (\n    <div className=\"volumeContainer\">\n      <div>\n        <div className=\"miniHeader\">\n          <div className=\"titleInfo\">\n            <h5>{title}</h5>\n            <p>{moment(publishedDate).format(\"Y\")}</p>\n            <div>\n              {averageRating && <Stars averageRating={averageRating} />}\n            </div>\n          </div>\n\n          <div className=\"volumeAuthor\">\n            <h4>{author}</h4>\n          </div>\n          <div className=\"titleMeta\">\n            <p>{pageCount} pages</p>\n            {categories && <Catagories categories={categories} />}\n          </div>\n          <div>\n            <CardFlipper\n              imageLinks={imageLinks}\n              description={description}\n              previewLink={previewLink}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default VolumeCardView;\n"]},"metadata":{},"sourceType":"module"}