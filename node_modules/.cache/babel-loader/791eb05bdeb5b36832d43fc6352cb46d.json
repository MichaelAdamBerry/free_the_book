{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/List.js\";\nimport React from \"react\";\nimport ListView from \"./ListView\";\nimport { getVolumes } from \"../api/google\";\nimport queryString from \"query-string\";\n\nvar List =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(List, _React$Component);\n\n  function List(props) {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this, props));\n    _this.state = {\n      loading: true,\n      volumes: []\n    };\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var query, volumes;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                query = queryString.parse(this.props.location.search);\n                console.log(\"componentdidmount and calling get volumes with\", query);\n                _context.next = 4;\n                return getVolumes(query);\n\n              case 4:\n                volumes = _context.sent;\n                this.setState({\n                  volumes: volumes\n                }, function () {\n                  _this2.setState({\n                    loading: false\n                  });\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loading = _this$state.loading,\n          volumes = _this$state.volumes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, !loading && React.createElement(ListView, {\n        volumes: volumes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return List;\n}(React.Component);\n\nexport { List as default };","map":{"version":3,"sources":["/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/List.js"],"names":["React","ListView","getVolumes","queryString","List","props","state","loading","volumes","query","parse","location","search","console","log","setState","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,WAAP,MAAwB,cAAxB;;IAEqBC,I;;;;;AACnB,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,OAAO,EAAE;AAA1B,KAAb;AAFiB;AAGlB;;;;;;;;;;;;;;;AAGOC,gBAAAA,K,GAAQN,WAAW,CAACO,KAAZ,CAAkB,KAAKL,KAAL,CAAWM,QAAX,CAAoBC,MAAtC,C;AACdC,gBAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ,EAA8DL,KAA9D;;uBACsBP,UAAU,CAACO,KAAD,C;;;AAA1BD,gBAAAA,O;AACN,qBAAKO,QAAL,CAAc;AAAEP,kBAAAA,OAAO,EAAEA;AAAX,iBAAd,EAAoC,YAAM;AACxC,kBAAA,MAAI,CAACO,QAAL,CAAc;AAAER,oBAAAA,OAAO,EAAE;AAAX,mBAAd;AACD,iBAFD;;;;;;;;;;;;;;;;;;6BAIO;AAAA,wBACsB,KAAKD,KAD3B;AAAA,UACCC,OADD,eACCA,OADD;AAAA,UACUC,OADV,eACUA,OADV;AAEP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,CAACD,OAAD,IAAY,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAEC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAlB,CAAP;AACD;;;;EAjB+BR,KAAK,CAACgB,S;;SAAnBZ,I","sourcesContent":["import React from \"react\";\nimport ListView from \"./ListView\";\nimport { getVolumes } from \"../api/google\";\nimport queryString from \"query-string\";\n\nexport default class List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { loading: true, volumes: [] };\n  }\n\n  async componentDidMount() {\n    const query = queryString.parse(this.props.location.search);\n    console.log(\"componentdidmount and calling get volumes with\", query);\n    const volumes = await getVolumes(query);\n    this.setState({ volumes: volumes }, () => {\n      this.setState({ loading: false });\n    });\n  }\n  render() {\n    const { loading, volumes } = this.state;\n    return <div>{!loading && <ListView volumes={volumes} />}</div>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}