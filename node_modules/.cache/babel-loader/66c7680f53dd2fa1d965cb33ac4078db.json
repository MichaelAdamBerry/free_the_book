{"ast":null,"code":"import _classCallCheck from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/CoverImg.js\";\nimport React from \"react\";\n\nvar CoverImg =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CoverImg, _React$Component);\n\n  function CoverImg() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CoverImg);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CoverImg)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      src: \"\",\n      noImage: false\n    };\n\n    _this.getImgSrc = function () {\n      //place holder if no image. Else if maxRes is true, highest resolution img, else lowest resolution\n      var _this$props = _this.props,\n          volumeInfo = _this$props.volumeInfo,\n          maxRes = _this$props.maxRes;\n\n      if (!volumeInfo.imageLinks) {\n        return \"http://www.lse.ac.uk/International-History/Images/Books/NoBookCover.png\";\n      } else {\n        var imageLinks = volumeInfo.imageLinks;\n        var imgArr = Object.keys(imageLinks);\n        var key = maxRes === true ? imgArr[imgArr.length - 1] : imgArr[0];\n        return imageLinks[key];\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(CoverImg, [{\n    key: \"render\",\n    value: function render() {\n      var src = this.getImgSrc();\n      return React.createElement(\"img\", {\n        src: src,\n        alt: \"book cover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return CoverImg;\n}(React.Component);\n\nexport { CoverImg as default };","map":{"version":3,"sources":["/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/CoverImg.js"],"names":["React","CoverImg","state","src","noImage","getImgSrc","props","volumeInfo","maxRes","imageLinks","imgArr","Object","keys","key","length","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEqBC,Q;;;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AAAEC,MAAAA,GAAG,EAAE,EAAP;AAAWC,MAAAA,OAAO,EAAE;AAApB,K;;UAERC,S,GAAY,YAAM;AAChB;AADgB,wBAEe,MAAKC,KAFpB;AAAA,UAERC,UAFQ,eAERA,UAFQ;AAAA,UAEIC,MAFJ,eAEIA,MAFJ;;AAGhB,UAAI,CAACD,UAAU,CAACE,UAAhB,EAA4B;AAC1B,eAAO,yEAAP;AACD,OAFD,MAEO;AAAA,YACGA,UADH,GACkBF,UADlB,CACGE,UADH;AAEL,YAAMC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYH,UAAZ,CAAf;AACA,YAAMI,GAAG,GAAGL,MAAM,KAAK,IAAX,GAAkBE,MAAM,CAACA,MAAM,CAACI,MAAP,GAAgB,CAAjB,CAAxB,GAA8CJ,MAAM,CAAC,CAAD,CAAhE;AACA,eAAOD,UAAU,CAACI,GAAD,CAAjB;AACD;AACF,K;;;;;;;6BACQ;AACP,UAAMV,GAAG,GAAG,KAAKE,SAAL,EAAZ;AACA,aAAO;AAAK,QAAA,GAAG,EAAEF,GAAV;AAAe,QAAA,GAAG,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAlBmCH,KAAK,CAACe,S;;SAAvBd,Q","sourcesContent":["import React from \"react\";\n\nexport default class CoverImg extends React.Component {\n  state = { src: \"\", noImage: false };\n\n  getImgSrc = () => {\n    //place holder if no image. Else if maxRes is true, highest resolution img, else lowest resolution\n    const { volumeInfo, maxRes } = this.props;\n    if (!volumeInfo.imageLinks) {\n      return \"http://www.lse.ac.uk/International-History/Images/Books/NoBookCover.png\";\n    } else {\n      const { imageLinks } = volumeInfo;\n      const imgArr = Object.keys(imageLinks);\n      const key = maxRes === true ? imgArr[imgArr.length - 1] : imgArr[0];\n      return imageLinks[key];\n    }\n  };\n  render() {\n    const src = this.getImgSrc();\n    return <img src={src} alt=\"book cover\" />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}