{"ast":null,"code":"import _classCallCheck from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/card/Card.js\";\nimport React from \"react\";\nimport CoverImg from \"../CoverImg\";\nimport Stars from \"./Stars\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nvar CardView = function CardView(_ref) {\n  var volume = _ref.volume;\n  return React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: {\n      pathname: \"/volume\",\n      search: \"id=\".concat(volume.id)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, volume.volumeInfo.title), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, !volume.volumeInfo.authors === false && \"by \".concat(volume.volumeInfo.authors[0])), React.createElement(\"div\", {\n    className: \"thumbnailContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(CoverImg, {\n    volumeInfo: volume.volumeInfo,\n    maxRes: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"stars\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, volume.volumeInfo.averageRating && React.createElement(Stars, {\n    averageRating: volume.volumeInfo.averageRating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })))));\n}; //render prop Card should passes props to render prop to be consumed by List and Volume\n\n\nvar Card =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Card, _React$Component);\n\n  function Card() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Card)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.volume = _this.props.volume;\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CardView, {\n        volume: volume,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Card;\n}(React.Component);\n\nCard.propTypes = {\n  volume: PropTypes.object.isRequired\n};\nexport default Card;","map":{"version":3,"sources":["/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/card/Card.js"],"names":["React","CoverImg","Stars","Link","PropTypes","CardView","volume","pathname","search","id","volumeInfo","title","authors","averageRating","Card","props","Component","propTypes","object","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AAC/B,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAAEC,MAAAA,QAAQ,EAAE,SAAZ;AAAuBC,MAAAA,MAAM,eAAQF,MAAM,CAACG,EAAf;AAA7B,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,MAAM,CAACI,UAAP,CAAkBC,KAAvB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACL,MAAM,CAACI,UAAP,CAAkBE,OAAnB,KAA+B,KAA/B,iBACON,MAAM,CAACI,UAAP,CAAkBE,OAAlB,CAA0B,CAA1B,CADP,CADH,CAFF,EAME;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,UAAU,EAAEN,MAAM,CAACI,UAA7B;AAAyC,IAAA,MAAM,EAAE,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,EASE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,MAAM,CAACI,UAAP,CAAkBG,aAAlB,IACC,oBAAC,KAAD;AAAO,IAAA,aAAa,EAAEP,MAAM,CAACI,UAAP,CAAkBG,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CATF,CADF,CADF,CADF;AAqBD,CAtBD,C,CAwBA;;;IACMC,I;;;;;;;;;;;;;;;;;UACJR,M,GAAS,MAAKS,KAAL,CAAWT,M;;;;;;6BAEX;AACP,aAAO,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAEA,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EALgBN,KAAK,CAACgB,S;;AAQzBF,IAAI,CAACG,SAAL,GAAiB;AACfX,EAAAA,MAAM,EAAEF,SAAS,CAACc,MAAV,CAAiBC;AADV,CAAjB;AAIA,eAAeL,IAAf","sourcesContent":["import React from \"react\";\nimport CoverImg from \"../CoverImg\";\nimport Stars from \"./Stars\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst CardView = ({ volume }) => {\n  return (\n    <div className=\"card\">\n      <Link to={{ pathname: \"/volume\", search: `id=${volume.id}` }}>\n        <div>\n          <h4>{volume.volumeInfo.title}</h4>\n          <h5>\n            {!volume.volumeInfo.authors === false &&\n              `by ${volume.volumeInfo.authors[0]}`}\n          </h5>\n          <div className=\"thumbnailContainer\">\n            <CoverImg volumeInfo={volume.volumeInfo} maxRes={false} />\n          </div>\n          <div className=\"stars\">\n            {volume.volumeInfo.averageRating && (\n              <Stars averageRating={volume.volumeInfo.averageRating} />\n            )}\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\n//render prop Card should passes props to render prop to be consumed by List and Volume\nclass Card extends React.Component {\n  volume = this.props.volume;\n\n  render() {\n    return <CardView volume={volume} />;\n  }\n}\n\nCard.propTypes = {\n  volume: PropTypes.object.isRequired\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}