{"ast":null,"code":"import _classCallCheck from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/Stars.js\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar, faStarHalf } from \"@fortawesome/free-solid-svg-icons\";\n\nvar Stars =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Stars, _React$Component);\n\n  function Stars() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Stars);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Stars)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderFullStars = function (count) {\n      for (var i = 0; i < count; i++) {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 9\n          },\n          __self: this\n        }, React.createElement(FontAwesomeIcon, {\n          icon: faStar,\n          style: {\n            backgroundColor: \"yellow\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        }));\n      }\n    };\n\n    _this.renderPartialStars = function (remainder) {\n      if (remainder) {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, React.createElement(FontAwesomeIcon, {\n          icon: faStarHalf,\n          style: {\n            backgroundColor: \"yellow\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }));\n      }\n    };\n\n    _this.renderEmptyStars = function (count) {\n      for (var i = 0; i < count; i++) {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(FontAwesomeIcon, {\n          icon: faStar,\n          style: {\n            backgroundColor: \"none\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }));\n      }\n    };\n\n    _this.renderStars = function (averageRating) {\n      var rating = Number(averageRating); //count of full stars\n\n      var full = Number.parseInt(rating); //boolean true to render partial star\n\n      var partial = rating % 1 !== 0; // count of empty stars\n\n      var empty = partial ? 4 - full : 5 - full;\n      return React.createElement(React.Fragment, null, React.createElement(\"span\", {\n        className: \"fullstars\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, _this.renderFullStars(full)), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, _this.renderPartialStars(partial)), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, _this.renderEmptyStars(empty)));\n    };\n\n    return _this;\n  }\n\n  _createClass(Stars, [{\n    key: \"render\",\n    value: function render() {\n      var averageRating = this.props.averageRating;\n      return React.createElement(React.Fragment, null, this.renderStars(averageRating));\n    }\n  }]);\n\n  return Stars;\n}(React.Component);\n\nexport { Stars as default };","map":{"version":3,"sources":["/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/Stars.js"],"names":["React","FontAwesomeIcon","faStar","faStarHalf","Stars","renderFullStars","count","i","backgroundColor","renderPartialStars","remainder","renderEmptyStars","renderStars","averageRating","rating","Number","full","parseInt","partial","empty","props","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,mCAAnC;;IAEqBC,K;;;;;;;;;;;;;;;;;;UACnBC,e,GAAkB,UAAAC,KAAK,EAAI;AACzB,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAApB,EAA2BC,CAAC,EAA5B,EAAgC;AAC9B,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,eAAD;AACE,UAAA,IAAI,EAAEL,MADR;AAEE,UAAA,KAAK,EAAE;AAAEM,YAAAA,eAAe,EAAE;AAAnB,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAQD;AACF,K;;UACDC,kB,GAAqB,UAAAC,SAAS,EAAI;AAChC,UAAIA,SAAJ,EAAe;AACb,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,eAAD;AACE,UAAA,IAAI,EAAEP,UADR;AAEE,UAAA,KAAK,EAAE;AAAEK,YAAAA,eAAe,EAAE;AAAnB,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAQD;AACF,K;;UACDG,gB,GAAmB,UAAAL,KAAK,EAAI;AAC1B,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAApB,EAA2BC,CAAC,EAA5B,EAAgC;AAC9B,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,eAAD;AAAiB,UAAA,IAAI,EAAEL,MAAvB;AAA+B,UAAA,KAAK,EAAE;AAAEM,YAAAA,eAAe,EAAE;AAAnB,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD;AACF,K;;UAEDI,W,GAAc,UAAAC,aAAa,EAAI;AAC7B,UAAMC,MAAM,GAAGC,MAAM,CAACF,aAAD,CAArB,CAD6B,CAE7B;;AACA,UAAMG,IAAI,GAAGD,MAAM,CAACE,QAAP,CAAgBH,MAAhB,CAAb,CAH6B,CAI7B;;AACA,UAAMI,OAAO,GAAGJ,MAAM,GAAG,CAAT,KAAe,CAA/B,CAL6B,CAM7B;;AACA,UAAMK,KAAK,GAAGD,OAAO,GAAG,IAAIF,IAAP,GAAc,IAAIA,IAAvC;AACA,aACE,0CACE;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B,MAAKX,eAAL,CAAqBW,IAArB,CAA7B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,MAAKP,kBAAL,CAAwBS,OAAxB,CAAP,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,MAAKP,gBAAL,CAAsBQ,KAAtB,CAAP,CAHF,CADF;AAOD,K;;;;;;;6BAEQ;AAAA,UACCN,aADD,GACmB,KAAKO,KADxB,CACCP,aADD;AAGP,aAAO,0CAAG,KAAKD,WAAL,CAAiBC,aAAjB,CAAH,CAAP;AACD;;;;EAxDgCb,KAAK,CAACqB,S;;SAApBjB,K","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar, faStarHalf } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class Stars extends React.Component {\n  renderFullStars = count => {\n    for (let i = 0; i < count; i++) {\n      return (\n        <span>\n          <FontAwesomeIcon\n            icon={faStar}\n            style={{ backgroundColor: \"yellow\" }}\n          />\n        </span>\n      );\n    }\n  };\n  renderPartialStars = remainder => {\n    if (remainder) {\n      return (\n        <span>\n          <FontAwesomeIcon\n            icon={faStarHalf}\n            style={{ backgroundColor: \"yellow\" }}\n          />\n        </span>\n      );\n    }\n  };\n  renderEmptyStars = count => {\n    for (let i = 0; i < count; i++) {\n      return (\n        <span>\n          <FontAwesomeIcon icon={faStar} style={{ backgroundColor: \"none\" }} />\n        </span>\n      );\n    }\n  };\n\n  renderStars = averageRating => {\n    const rating = Number(averageRating);\n    //count of full stars\n    const full = Number.parseInt(rating);\n    //boolean true to render partial star\n    const partial = rating % 1 !== 0;\n    // count of empty stars\n    const empty = partial ? 4 - full : 5 - full;\n    return (\n      <>\n        <span className=\"fullstars\">{this.renderFullStars(full)}</span>\n        <span>{this.renderPartialStars(partial)}</span>\n        <span>{this.renderEmptyStars(empty)}</span>\n      </>\n    );\n  };\n\n  render() {\n    const { averageRating } = this.props;\n\n    return <>{this.renderStars(averageRating)}</>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}