{"ast":null,"code":"var _jsxFileName = \"/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/volume/VolumeCardView.js\";\nimport React from \"react\";\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport Stars from \"../card/Stars\";\nimport BookFlipper from \"./BookFlipper\";\n\nvar Catagories = function Catagories(_ref) {\n  var categories = _ref.categories;\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, categories.map(function (e) {\n    return React.createElement(\"span\", {\n      key: Math.random() * 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, e, \" \");\n  }));\n};\n\nCatagories.propTypes = {\n  catagories: PropTypes.array\n};\n\nfunction VolumeCardView(props) {\n  var title = props.title,\n      author = props.author,\n      publishedDate = props.publishedDate,\n      imageLinks = props.imageLinks,\n      averageRating = props.averageRating,\n      description = props.description,\n      pageCount = props.pageCount,\n      previewLink = props.previewLink,\n      categories = props.categories;\n  return React.createElement(\"div\", {\n    className: \"volumeContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"miniHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"titleInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, moment(publishedDate).format(\"Y\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, !averageRating === false && React.createElement(Stars, {\n    averageRating: props.averageRating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"volumeAuthor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, author)), React.createElement(\"div\", {\n    className: \"titleMeta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, pageCount, \" pages\"), !categories === false && React.createElement(Catagories, {\n    categories: categories,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(BookFlipper, {\n    imageLinks: imageLinks,\n    description: description,\n    previewLink: previewLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })))));\n}\n\nexport default VolumeCardView;","map":{"version":3,"sources":["/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/volume/VolumeCardView.js"],"names":["React","moment","PropTypes","Stars","BookFlipper","Catagories","categories","map","e","Math","random","propTypes","catagories","array","VolumeCardView","props","title","author","publishedDate","imageLinks","averageRating","description","pageCount","previewLink","format"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\n\nimport PropTypes from \"prop-types\";\nimport Stars from \"../card/Stars\";\nimport BookFlipper from \"./BookFlipper\";\n\nconst Catagories = ({ categories }) => {\n  return (\n    <p>\n      {categories.map(e => (\n        <span key={Math.random() * 20}>{e} </span>\n      ))}\n    </p>\n  );\n};\n\nCatagories.propTypes = {\n  catagories: PropTypes.array\n};\n\nfunction VolumeCardView(props) {\n  const {\n    title,\n    author,\n    publishedDate,\n    imageLinks,\n    averageRating,\n    description,\n    pageCount,\n    previewLink,\n    categories\n  } = props;\n  return (\n    <div className=\"volumeContainer\">\n      <div>\n        <div className=\"miniHeader\">\n          <div className=\"titleInfo\">\n            <h5>{title}</h5>\n            <p>{moment(publishedDate).format(\"Y\")}</p>\n            <div>\n              {!averageRating === false && (\n                <Stars averageRating={props.averageRating} />\n              )}\n            </div>\n          </div>\n          <div className=\"volumeAuthor\">\n            <h4>{author}</h4>\n          </div>\n          <div className=\"titleMeta\">\n            <p>{pageCount} pages</p>\n            {!categories === false && <Catagories categories={categories} />}\n          </div>\n          <div>\n            <BookFlipper\n              imageLinks={imageLinks}\n              description={description}\n              previewLink={previewLink}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default VolumeCardView;\n"]},"metadata":{},"sourceType":"module"}