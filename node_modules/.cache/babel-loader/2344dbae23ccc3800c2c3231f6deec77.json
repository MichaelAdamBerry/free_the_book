{"ast":null,"code":"import _objectSpread from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport React from \"react\";\nimport { withRouter } from \"react-router\";\n\nvar Search =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, props));\n\n    _this.handleSubmit = function (event) {\n      var history = _this.props.history;\n      event.preventDefault();\n      history.replace({\n        pathname: \"/list\",\n        search: \"?q=\".concat(_this.state.query)\n      });\n    };\n\n    _this.getActions = function () {\n      return {\n        submitQuery: _this.handleSubmit,\n        typeLetter: _this.handleChange\n      };\n    };\n\n    _this.state = {\n      query: \"\"\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var value = event.target.value;\n      this.setState({\n        query: value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.render(_objectSpread({}, this.state, {\n        actions: this.getActions()\n      }));\n    }\n  }]);\n\n  return Search;\n}(React.Component);\n\nexport default withRouter(Search);","map":{"version":3,"sources":["/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/Search.js"],"names":["React","withRouter","Search","props","handleSubmit","event","history","preventDefault","replace","pathname","search","state","query","getActions","submitQuery","typeLetter","handleChange","bind","value","target","setState","render","actions","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;;IAEMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;;AADiB,UAYnBC,YAZmB,GAYJ,UAAAC,KAAK,EAAI;AACtB,UAAMC,OAAO,GAAG,MAAKH,KAAL,CAAWG,OAA3B;AACAD,MAAAA,KAAK,CAACE,cAAN;AACAD,MAAAA,OAAO,CAACE,OAAR,CAAgB;AACdC,QAAAA,QAAQ,SADM;AAEdC,QAAAA,MAAM,eAAQ,MAAKC,KAAL,CAAWC,KAAnB;AAFQ,OAAhB;AAID,KAnBkB;;AAAA,UAqBnBC,UArBmB,GAqBN,YAAM;AACjB,aAAO;AACLC,QAAAA,WAAW,EAAE,MAAKV,YADb;AAELW,QAAAA,UAAU,EAAE,MAAKC;AAFZ,OAAP;AAID,KA1BkB;;AAEjB,UAAKL,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAb;AACA,UAAKR,YAAL,GAAoB,MAAKA,YAAL,CAAkBa,IAAlB,uDAApB;AACA,UAAKD,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AAJiB;AAKlB;;;;iCAEYZ,K,EAAO;AAClB,UAAMa,KAAK,GAAGb,KAAK,CAACc,MAAN,CAAaD,KAA3B;AACA,WAAKE,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAEM;AAAT,OAAd;AACD;;;6BAkBQ;AACP,aAAO,KAAKf,KAAL,CAAWkB,MAAX,mBAAuB,KAAKV,KAA5B;AAAmCW,QAAAA,OAAO,EAAE,KAAKT,UAAL;AAA5C,SAAP;AACD;;;;EA/BkBb,KAAK,CAACuB,S;;AAiC3B,eAAetB,UAAU,CAACC,MAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router\";\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { query: \"\" };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const value = event.target.value;\n    this.setState({ query: value });\n  }\n\n  handleSubmit = event => {\n    const history = this.props.history;\n    event.preventDefault();\n    history.replace({\n      pathname: `/list`,\n      search: `?q=${this.state.query}`\n    });\n  };\n\n  getActions = () => {\n    return {\n      submitQuery: this.handleSubmit,\n      typeLetter: this.handleChange\n    };\n  };\n\n  render() {\n    return this.props.render({ ...this.state, actions: this.getActions() });\n  }\n}\nexport default withRouter(Search);\n"]},"metadata":{},"sourceType":"module"}