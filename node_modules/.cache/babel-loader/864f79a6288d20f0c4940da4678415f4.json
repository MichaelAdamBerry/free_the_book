{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/list/List.js\";\nimport React from \"react\";\nimport { getVolumeList } from \"../../utils/api/google\";\nimport queryString from \"query-string\";\nimport Card from \"../card/Card\";\nimport PropTypes from \"prop-types\";\nimport CardSpring from \"./ListCardView\";\n\nvar ListItem = function ListItem(_ref) {\n  var volume = _ref.volume;\n  // check to see if book is available for free\n  var free = volume.accessInfo.viewabilty === \"ALL_PAGES\" && volume.accessInfo.epub.isAvailable === true;\n  return React.createElement(Card, {\n    free: free,\n    volume: volume,\n    volumeInfo: volume.volumeInfo,\n    render: function render(_ref2) {\n      var props = _ref2.props;\n      return React.createElement(CardSpring, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  });\n};\n\nListItem.propTypes = {\n  volume: PropTypes.object.isRequired\n};\nexport var ListView = function ListView(_ref3) {\n  var volumes = _ref3.volumes;\n  return React.createElement(\"div\", {\n    \"data-testid\": \"listWrapper\",\n    className: \"listWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, volumes.map(function (volume, index) {\n    return React.createElement(ListItem, {\n      volume: volume,\n      key: Math.random() * 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    });\n  }));\n};\nListView.propTypes = {\n  volumes: PropTypes.array.isRequired\n};\n\nvar List =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(List, _React$Component);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: true\n    };\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var query, volumes;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              query = queryString.parse(_this.props.location.search);\n              _context.next = 3;\n              return getVolumeList(query.q);\n\n            case 3:\n              volumes = _context.sent;\n\n              _this.setState({\n                volumes: volumes,\n                query: query.q\n              }, function () {\n                _this.setState({\n                  loading: false\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loading = _this$state.loading,\n          volumes = _this$state.volumes;\n      return React.createElement(\"div\", {\n        className: \"listContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, !loading && React.createElement(ListView, {\n        volumes: volumes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return List;\n}(React.Component);\n\nexport { List as default };","map":{"version":3,"sources":["/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/list/List.js"],"names":["React","getVolumeList","queryString","Card","PropTypes","CardSpring","ListItem","volume","free","accessInfo","viewabilty","epub","isAvailable","volumeInfo","props","propTypes","object","isRequired","ListView","volumes","map","index","Math","random","array","List","state","loading","componentDidMount","query","parse","location","search","q","setState","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AAC/B;AACA,MAAMC,IAAI,GACRD,MAAM,CAACE,UAAP,CAAkBC,UAAlB,KAAiC,WAAjC,IACAH,MAAM,CAACE,UAAP,CAAkBE,IAAlB,CAAuBC,WAAvB,KAAuC,IAFzC;AAGA,SACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAEJ,IADR;AAEE,IAAA,MAAM,EAAED,MAFV;AAGE,IAAA,UAAU,EAAEA,MAAM,CAACM,UAHrB;AAIE,IAAA,MAAM,EAAE,uBAAe;AAAA,UAAZC,KAAY,SAAZA,KAAY;AACrB,aAAO,oBAAC,UAAD,oBAAgBA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUD,CAfD;;AAgBAR,QAAQ,CAACS,SAAT,GAAqB;AACnBR,EAAAA,MAAM,EAAEH,SAAS,CAACY,MAAV,CAAiBC;AADN,CAArB;AAIA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,QAAiB;AAAA,MAAdC,OAAc,SAAdA,OAAc;AACvC,SACE;AAAK,mBAAY,aAAjB;AAA+B,IAAA,SAAS,EAAC,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,CAACC,GAAR,CAAY,UAACb,MAAD,EAASc,KAAT;AAAA,WACX,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEd,MAAlB;AAA0B,MAAA,GAAG,EAAEe,IAAI,CAACC,MAAL,KAAgB,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW;AAAA,GAAZ,CADH,CADF;AAOD,CARM;AAUPL,QAAQ,CAACH,SAAT,GAAqB;AACnBI,EAAAA,OAAO,EAAEf,SAAS,CAACoB,KAAV,CAAgBP;AADN,CAArB;;IAIqBQ,I;;;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AAAEC,MAAAA,OAAO,EAAE;AAAX,K;UAERC,iB;;;;6BAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,cAAAA,KADY,GACJ3B,WAAW,CAAC4B,KAAZ,CAAkB,MAAKhB,KAAL,CAAWiB,QAAX,CAAoBC,MAAtC,CADI;AAAA;AAAA,qBAEI/B,aAAa,CAAC4B,KAAK,CAACI,CAAP,CAFjB;;AAAA;AAEZd,cAAAA,OAFY;;AAGlB,oBAAKe,QAAL,CAAc;AAAEf,gBAAAA,OAAO,EAAEA,OAAX;AAAoBU,gBAAAA,KAAK,EAAEA,KAAK,CAACI;AAAjC,eAAd,EAAoD,YAAM;AACxD,sBAAKC,QAAL,CAAc;AAAEP,kBAAAA,OAAO,EAAE;AAAX,iBAAd;AACD,eAFD;;AAHkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;6BAQX;AAAA,wBACsB,KAAKD,KAD3B;AAAA,UACCC,OADD,eACCA,OADD;AAAA,UACUR,OADV,eACUA,OADV;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,CAACQ,OAAD,IAAY,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAER,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADf,CADF;AAKD;;;;EAlB+BnB,KAAK,CAACmC,S;;SAAnBV,I","sourcesContent":["import React from \"react\";\nimport { getVolumeList } from \"../../utils/api/google\";\nimport queryString from \"query-string\";\nimport Card from \"../card/Card\";\nimport PropTypes from \"prop-types\";\nimport CardSpring from \"./ListCardView\";\n\nconst ListItem = ({ volume }) => {\n  // check to see if book is available for free\n  const free =\n    volume.accessInfo.viewabilty === \"ALL_PAGES\" &&\n    volume.accessInfo.epub.isAvailable === true;\n  return (\n    <Card\n      free={free}\n      volume={volume}\n      volumeInfo={volume.volumeInfo}\n      render={({ props }) => {\n        return <CardSpring {...props} />;\n      }}\n    />\n  );\n};\nListItem.propTypes = {\n  volume: PropTypes.object.isRequired\n};\n\nexport const ListView = ({ volumes }) => {\n  return (\n    <div data-testid=\"listWrapper\" className=\"listWrapper\">\n      {volumes.map((volume, index) => (\n        <ListItem volume={volume} key={Math.random() * 10} />\n      ))}\n    </div>\n  );\n};\n\nListView.propTypes = {\n  volumes: PropTypes.array.isRequired\n};\n\nexport default class List extends React.Component {\n  state = { loading: true };\n\n  componentDidMount = async () => {\n    const query = queryString.parse(this.props.location.search);\n    const volumes = await getVolumeList(query.q);\n    this.setState({ volumes: volumes, query: query.q }, () => {\n      this.setState({ loading: false });\n    });\n  };\n\n  render() {\n    const { loading, volumes } = this.state;\n    return (\n      <div className=\"listContainer\">\n        {!loading && <ListView volumes={volumes} />}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}