{"ast":null,"code":"import _classCallCheck from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/card/Card.js\";\nimport React from \"react\";\nimport CoverImg from \"../CoverImg\";\nimport Stars from \"./Stars\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nvar CardView = function CardView(props) {\n  return React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: {\n      pathname: \"/volume\",\n      search: \"id=\".concat(props.id)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, props.title), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"\".concat(props.author)), React.createElement(\"div\", {\n    className: \"thumbnailContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(CoverImg, {\n    volumeInfo: props.imageLinks,\n    maxRes: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"stars\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, props.averageRating && React.createElement(Stars, {\n    averageRating: props.averageRating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })))));\n}; //render prop Card should passes props to render prop to be consumed by List and Volume\n\n\nvar Card =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Card, _React$Component);\n\n  function Card() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Card)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getProps = function () {\n      return {\n        id: _this.volume.id,\n        title: _this.volumeInfo.title ? _this.volumeInfo.title : \"\",\n        author: _this.volumeInfo.authors ? _this.volumeInfo.authors[0] : \"\",\n        averageRating: _this.volumeInfo.averageRating ? _this.volumeInfo.averageRating : \"\",\n        imageLinks: _this.volumeInfo.imageLinks ? _this.volumeInfo.imageLinks : \"\"\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CardView, {\n        props: this.getProps(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Card;\n}(React.Component);\n\nCard.propTypes = {\n  volume: PropTypes.object.isRequired\n};\nexport default Card;","map":{"version":3,"sources":["/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/card/Card.js"],"names":["React","CoverImg","Stars","Link","PropTypes","CardView","props","pathname","search","id","title","author","imageLinks","averageRating","Card","getProps","volume","volumeInfo","authors","Component","propTypes","object","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACxB,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAAEC,MAAAA,QAAQ,EAAE,SAAZ;AAAuBC,MAAAA,MAAM,eAAQF,KAAK,CAACG,EAAd;AAA7B,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAK,CAACI,KAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAQJ,KAAK,CAACK,MAAd,EAFF,EAGE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,UAAU,EAAEL,KAAK,CAACM,UAA5B;AAAwC,IAAA,MAAM,EAAE,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,EAME;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACO,aAAN,IACC,oBAAC,KAAD;AAAO,IAAA,aAAa,EAAEP,KAAK,CAACO,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CANF,CADF,CADF,CADF;AAkBD,CAnBD,C,CAqBA;;;IACMC,I;;;;;;;;;;;;;;;;;;UACJC,Q,GAAW,YAAM;AACf,aAAO;AACLN,QAAAA,EAAE,EAAE,MAAKO,MAAL,CAAYP,EADX;AAELC,QAAAA,KAAK,EAAE,MAAKO,UAAL,CAAgBP,KAAhB,GAAwB,MAAKO,UAAL,CAAgBP,KAAxC,GAAgD,EAFlD;AAGLC,QAAAA,MAAM,EAAE,MAAKM,UAAL,CAAgBC,OAAhB,GAA0B,MAAKD,UAAL,CAAgBC,OAAhB,CAAwB,CAAxB,CAA1B,GAAuD,EAH1D;AAILL,QAAAA,aAAa,EAAE,MAAKI,UAAL,CAAgBJ,aAAhB,GACX,MAAKI,UAAL,CAAgBJ,aADL,GAEX,EANC;AAOLD,QAAAA,UAAU,EAAE,MAAKK,UAAL,CAAgBL,UAAhB,GAA6B,MAAKK,UAAL,CAAgBL,UAA7C,GAA0D;AAPjE,OAAP;AASD,K;;;;;;;6BACQ;AACP,aAAO,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKG,QAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAdgBf,KAAK,CAACmB,S;;AAiBzBL,IAAI,CAACM,SAAL,GAAiB;AACfJ,EAAAA,MAAM,EAAEZ,SAAS,CAACiB,MAAV,CAAiBC;AADV,CAAjB;AAIA,eAAeR,IAAf","sourcesContent":["import React from \"react\";\nimport CoverImg from \"../CoverImg\";\nimport Stars from \"./Stars\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst CardView = props => {\n  return (\n    <div className=\"card\">\n      <Link to={{ pathname: \"/volume\", search: `id=${props.id}` }}>\n        <div>\n          <h4>{props.title}</h4>\n          <h5>{`${props.author}`}</h5>\n          <div className=\"thumbnailContainer\">\n            <CoverImg volumeInfo={props.imageLinks} maxRes={false} />\n          </div>\n          <div className=\"stars\">\n            {props.averageRating && (\n              <Stars averageRating={props.averageRating} />\n            )}\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\n//render prop Card should passes props to render prop to be consumed by List and Volume\nclass Card extends React.Component {\n  getProps = () => {\n    return {\n      id: this.volume.id,\n      title: this.volumeInfo.title ? this.volumeInfo.title : \"\",\n      author: this.volumeInfo.authors ? this.volumeInfo.authors[0] : \"\",\n      averageRating: this.volumeInfo.averageRating\n        ? this.volumeInfo.averageRating\n        : \"\",\n      imageLinks: this.volumeInfo.imageLinks ? this.volumeInfo.imageLinks : \"\"\n    };\n  };\n  render() {\n    return <CardView props={this.getProps()} />;\n  }\n}\n\nCard.propTypes = {\n  volume: PropTypes.object.isRequired\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}