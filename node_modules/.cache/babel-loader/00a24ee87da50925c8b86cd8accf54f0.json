{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/Volume.js\";\nimport React from \"react\";\nimport queryString from \"query-string\";\nimport { getVolume } from \"../api/google\";\nimport CoverImg from \"./CoverImg\"; //TODO handle error if image doesn't exist\n\nfunction VolumeView(_ref) {\n  var volume = _ref.volume;\n  var volumeInfo = volume.volumeInfo,\n      averageRating = volume.averageRating;\n  var title = volumeInfo.title,\n      authors = volumeInfo.authors,\n      publishedDate = volumeInfo.publishedDate,\n      description = volumeInfo.description,\n      pageCount = volumeInfo.pageCount;\n  console.log(\"authors \", authors);\n  console.log(\"average rating is \", averageRating);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Published: \", publishedDate), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, pageCount), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, averageRating), React.createElement(\"p\", {\n    dangerouslySetInnerHTML: {\n      __html: \"\".concat(description)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(CoverImg, {\n    volumeInfo: volumeInfo,\n    maxRes: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }));\n}\n\nvar Volume =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Volume, _React$Component);\n\n  function Volume(props) {\n    var _this;\n\n    _classCallCheck(this, Volume);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Volume).call(this, props));\n    _this.state = {\n      loading: true,\n      volume: null\n    };\n    return _this;\n  }\n\n  _createClass(Volume, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var id, volume;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                id = queryString.parse(this.props.location.search);\n                console.log(\"the id from the string is \", id.id);\n                _context.next = 4;\n                return getVolume(id.id);\n\n              case 4:\n                volume = _context.sent;\n                console.log(\"volume returned from api request\", volume);\n                this.setState({\n                  volume: volume\n                }, function () {\n                  _this2.setState({\n                    loading: false\n                  });\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loading = _this$state.loading,\n          volume = _this$state.volume;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, !loading && React.createElement(VolumeView, {\n        volume: volume,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Volume;\n}(React.Component);\n\nexport { Volume as default };","map":{"version":3,"sources":["/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/Volume.js"],"names":["React","queryString","getVolume","CoverImg","VolumeView","volume","volumeInfo","averageRating","title","authors","publishedDate","description","pageCount","console","log","__html","Volume","props","state","loading","id","parse","location","search","setState","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;;AAEA,SAASC,UAAT,OAAgC;AAAA,MAAVC,MAAU,QAAVA,MAAU;AAAA,MACtBC,UADsB,GACQD,MADR,CACtBC,UADsB;AAAA,MACVC,aADU,GACQF,MADR,CACVE,aADU;AAAA,MAEtBC,KAFsB,GAEoCF,UAFpC,CAEtBE,KAFsB;AAAA,MAEfC,OAFe,GAEoCH,UAFpC,CAEfG,OAFe;AAAA,MAENC,aAFM,GAEoCJ,UAFpC,CAENI,aAFM;AAAA,MAESC,WAFT,GAEoCL,UAFpC,CAESK,WAFT;AAAA,MAEsBC,SAFtB,GAEoCN,UAFpC,CAEsBM,SAFtB;AAI9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBL,OAAxB;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCP,aAAlC;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,KAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeE,aAAf,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,SAAJ,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,aAAJ,CAJF,EAKE;AAAG,IAAA,uBAAuB,EAAE;AAAEQ,MAAAA,MAAM,YAAKJ,WAAL;AAAR,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,oBAAC,QAAD;AAAU,IAAA,UAAU,EAAEL,UAAtB;AAAkC,IAAA,MAAM,EAAE,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD;;IAEoBU,M;;;;;AACnB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBd,MAAAA,MAAM,EAAE;AAAzB,KAAb;AAFiB;AAGlB;;;;;;;;;;;;;;;AAEOe,gBAAAA,E,GAAKnB,WAAW,CAACoB,KAAZ,CAAkB,KAAKJ,KAAL,CAAWK,QAAX,CAAoBC,MAAtC,C;AACXV,gBAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CM,EAAE,CAACA,EAA7C;;uBACqBlB,SAAS,CAACkB,EAAE,CAACA,EAAJ,C;;;AAAxBf,gBAAAA,M;AACNQ,gBAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDT,MAAhD;AACA,qBAAKmB,QAAL,CAAc;AAAEnB,kBAAAA,MAAM,EAAEA;AAAV,iBAAd,EAAkC,YAAM;AACtC,kBAAA,MAAI,CAACmB,QAAL,CAAc;AAAEL,oBAAAA,OAAO,EAAE;AAAX,mBAAd;AACD,iBAFD;;;;;;;;;;;;;;;;;;6BAIO;AAAA,wBACqB,KAAKD,KAD1B;AAAA,UACCC,OADD,eACCA,OADD;AAAA,UACUd,MADV,eACUA,MADV;AAEP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,CAACc,OAAD,IAAY,oBAAC,UAAD;AAAY,QAAA,MAAM,EAAEd,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAlB,CAAP;AACD;;;;EAjBiCL,KAAK,CAACyB,S;;SAArBT,M","sourcesContent":["import React from \"react\";\nimport queryString from \"query-string\";\nimport { getVolume } from \"../api/google\";\nimport CoverImg from \"./CoverImg\";\n\n//TODO handle error if image doesn't exist\n\nfunction VolumeView({ volume }) {\n  const { volumeInfo, averageRating } = volume;\n  const { title, authors, publishedDate, description, pageCount } = volumeInfo;\n\n  console.log(\"authors \", authors);\n\n  console.log(\"average rating is \", averageRating);\n  return (\n    <div>\n      <h5>{title}</h5>\n      <p>Published: {publishedDate}</p>\n      <p>{pageCount}</p>\n      <p>{averageRating}</p>\n      <p dangerouslySetInnerHTML={{ __html: `${description}` }} />\n      <CoverImg volumeInfo={volumeInfo} maxRes={true} />\n    </div>\n  );\n}\n\nexport default class Volume extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { loading: true, volume: null };\n  }\n  async componentDidMount() {\n    const id = queryString.parse(this.props.location.search);\n    console.log(\"the id from the string is \", id.id);\n    const volume = await getVolume(id.id);\n    console.log(\"volume returned from api request\", volume);\n    this.setState({ volume: volume }, () => {\n      this.setState({ loading: false });\n    });\n  }\n  render() {\n    const { loading, volume } = this.state;\n    return <div>{!loading && <VolumeView volume={volume} />}</div>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}