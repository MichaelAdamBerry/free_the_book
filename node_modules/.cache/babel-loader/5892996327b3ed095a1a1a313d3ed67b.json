{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelberry/Desktop/bookshelf/bookshelf/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/Volume.js\";\nimport React from \"react\";\nimport queryString from \"query-string\";\nimport { getVolume } from \"../api/google\";\nimport CoverImg from \"./CoverImg\"; //TODO handle error if image doesn't exist\n\nfunction VolumeView(_ref) {\n  var volume = _ref.volume;\n  var volumeInfo = volume.volumeInfo,\n      averageRating = volume.averageRating;\n  var title = volumeInfo.title,\n      authors = volumeInfo.authors,\n      catagories = volumeInfo.catagories,\n      publishedDate = volumeInfo.publishedDate,\n      description = volumeInfo.description,\n      pageCount = volumeInfo.pageCount;\n  console.log(\"authors \", authors);\n  console.log(\"average rating is \", averageRating);\n  return React.createElement(\"div\", {\n    className: \"volumeContainer\",\n    style: {\n      backgroundImage: \"url(https://cdn5.teebooks.com/3611-thickbox_default/bookshelves-u-set-of-6.jpg?_ga=2.14652146.43169510.1548520510-1695472323.1548520510&_gac=1.115906804.1548520510.Cj0KCQiAp7DiBRDdARIsABIMfoCTQ5fz-1VPkGuMO2mY6l6mHSByDcuxX2cXho97IYXJlpHZl5i9fEgaAhcPEALw_wcB)\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"volumeContent card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"miniHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(CoverImg, {\n    volumeInfo: volumeInfo,\n    maxRes: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Published: \", publishedDate), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, pageCount, \" pages\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }))), React.createElement(\"p\", {\n    dangerouslySetInnerHTML: {\n      __html: \"\".concat(description)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })));\n}\n\nvar Volume =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Volume, _React$Component);\n\n  function Volume(props) {\n    var _this;\n\n    _classCallCheck(this, Volume);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Volume).call(this, props));\n    _this.state = {\n      loading: true,\n      volume: null\n    };\n    return _this;\n  }\n\n  _createClass(Volume, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var id, volume;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                id = queryString.parse(this.props.location.search);\n                console.log(\"the id from the string is \", id.id);\n                _context.next = 4;\n                return getVolume(id.id);\n\n              case 4:\n                volume = _context.sent;\n                console.log(\"volume returned from api request\", volume);\n                this.setState({\n                  volume: volume\n                }, function () {\n                  _this2.setState({\n                    loading: false\n                  });\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loading = _this$state.loading,\n          volume = _this$state.volume;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, !loading && React.createElement(VolumeView, {\n        volume: volume,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Volume;\n}(React.Component);\n\nexport { Volume as default };","map":{"version":3,"sources":["/Users/michaelberry/Desktop/bookshelf/bookshelf/src/components/Volume.js"],"names":["React","queryString","getVolume","CoverImg","VolumeView","volume","volumeInfo","averageRating","title","authors","catagories","publishedDate","description","pageCount","console","log","backgroundImage","__html","Volume","props","state","loading","id","parse","location","search","setState","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport queryString from \"query-string\";\nimport { getVolume } from \"../api/google\";\nimport CoverImg from \"./CoverImg\";\n\n//TODO handle error if image doesn't exist\n\nfunction VolumeView({ volume }) {\n  const { volumeInfo, averageRating } = volume;\n  const {\n    title,\n    authors,\n    catagories,\n    publishedDate,\n    description,\n    pageCount\n  } = volumeInfo;\n\n  console.log(\"authors \", authors);\n\n  console.log(\"average rating is \", averageRating);\n  return (\n    <div\n      className=\"volumeContainer\"\n      style={{\n        backgroundImage:\n          \"url(https://cdn5.teebooks.com/3611-thickbox_default/bookshelves-u-set-of-6.jpg?_ga=2.14652146.43169510.1548520510-1695472323.1548520510&_gac=1.115906804.1548520510.Cj0KCQiAp7DiBRDdARIsABIMfoCTQ5fz-1VPkGuMO2mY6l6mHSByDcuxX2cXho97IYXJlpHZl5i9fEgaAhcPEALw_wcB)\"\n      }}>\n      <div className=\"volumeContent card\">\n        <div className=\"miniHeader\">\n          <CoverImg volumeInfo={volumeInfo} maxRes={false} />\n          <div>\n            <h3>{title}</h3>\n            <p>Published: {publishedDate}</p>\n            <p>{pageCount} pages</p>\n            <p />\n          </div>\n        </div>\n        <p dangerouslySetInnerHTML={{ __html: `${description}` }} />\n      </div>\n    </div>\n  );\n}\n\nexport default class Volume extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { loading: true, volume: null };\n  }\n  async componentDidMount() {\n    const id = queryString.parse(this.props.location.search);\n    console.log(\"the id from the string is \", id.id);\n    const volume = await getVolume(id.id);\n    console.log(\"volume returned from api request\", volume);\n    this.setState({ volume: volume }, () => {\n      this.setState({ loading: false });\n    });\n  }\n  render() {\n    const { loading, volume } = this.state;\n    return <div>{!loading && <VolumeView volume={volume} />}</div>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}